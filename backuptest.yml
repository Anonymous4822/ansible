
---
- name: backup procedure
  hosts: centos
  become: yes

  vars: 
   path_backup: "/home/hushpuppi/backup-files"
   path_sql: "/sql"
   path_server: "/server"
   path_cfg: "/cfg"
   path_data: "/data"
   path_prod: "/prod"
   path_dev: "/dev"
   path_selinux: "/selinux"
   path_ssh: "/ssh"
   path_firewalld: "/firewalld"
   path_fail2ban: "/fail2ban"
   path_httpd: "/httpd"
   path_postgresql: "/postgresql"
   path_rkhunter: "/rkhunter"
   path_openssl: "/openssl"
   date: "{{ ansible_date_time.date.replace('-','') }}"

  tasks:

    - name: create backup directories
      file: 
       path: "{{ path_backup }}{{ item }}"
       state: directory
       mode: '0755'
       owner: hushpuppi
       group: hushpuppi
       recurse: yes
      with_items: 
      - "{{ path_httpd }}"
      - "{{ path_sql }}"
      - "{{ path_server }}"


    - name: create backup directories httpd
      file: 
       path: "{{ path_backup }}{{ path_httpd }}{{ item }}"
       state: directory
       mode: '0755'
       owner: hushpuppi
       group: hushpuppi
       recurse: yes
      with_items: 
      - "{{ path_cfg }}"
      - "{{ path_data }}"

   
    - name: create backup directories httpd data
      file: 
       path: "{{ path_backup }}{{ path_httpd }}{{ path_data }}{{ item }}"
       state: directory
       mode: '0755'
       owner: hushpuppi
       group: hushpuppi
       recurse: yes
      with_items: 
      - "{{ path_prod }}"
      - "{{ path_dev }}"

    
    - name: create backup directories sql
      file: 
       path: "{{ path_backup }}{{ path_sql }}{{ item }}"
       state: directory
       mode: '0755'
       owner: hushpuppi
       group: hushpuppi
       recurse: yes
      with_items: 
      - "{{ path_cfg }}"
      - "{{ path_data }}"


    - name: checking services enabled
      systemd:
       name: "{{ item }}"
       state: started
      with_items:
      - fail2ban.service
      - firewalld.service
      - sshd.service
      - httpd.service
      - postgresql-15.service


    - name: create backup directories services
      file: 
       path: "{{ path_backup }}{{ path_server }}{{ item }}"
       state: directory
       mode: '0755'
       owner: hushpuppi
       group: hushpuppi
       recurse: yes
      with_items: 
      - "{{ path_fail2ban }}"
      - "{{ path_firewalld }}"
      - "{{ path_ssh }}"
      - "{{ path_httpd }}"
      - "{{ path_postgresql }}"
      - "{{ path_selinux }}"
      - "{{ path_rkhunter }}"



    - name: create backup web directory
      archive:
        force_archive: true
        path: /var/www/html/domain1
        dest: "{{ path_backup }}{{ path_httpd }}{{ path_data }}{{ path_prod }}/web-{{ date }}.tar.bz2"
        format: bz2
        owner: hushpuppi
        group: hushpuppi
        mode: '0644'


    - name: create backup services
      archive:
        force_archive: true
        path: "/etc/{{ item }}"
        dest: "{{ path_backup }}{{ path_server }}{{ item }}/{{ item }}-{{ date }}.tar.bz2"
        format: bz2
        owner: hushpuppi
        group: hushpuppi
        mode: '0644'
      with_items: 
      - "{{ path_fail2ban }}"
      - "{{ path_firewalld }}"
      - "{{ path_httpd }}"
      - "{{ path_ssh }}"
     

    - name: create backup selinux
      archive:
        force_archive: true
        path: /etc/selinux
        dest: "{{ path_backup }}{{ path_server }}{{ path_selinux }}/selinux-{{ date }}.tar.bz2"
        format: bz2
        owner: hushpuppi
        group: hushpuppi
        mode: '0644'

    - name: create backup rkhunter
      archive:
        force_archive: true
        path: 
        - /etc/rkhunter.conf
        - /var/lib/rkhunter
        dest: "{{ path_backup }}{{ path_server }}{{ path_rkhunter }}/rkhunter-{{ date }}.tar.bz2"
        format: bz2
        owner: hushpuppi
        group: hushpuppi
        mode: '0644'


    - name: Create a backup directory
      file:
        path: "/var/lib/pgsql/15//backups/{{ date }}/"
        mode: 0777
        owner: hushpuppi
        state: directory


    - name: Install python-psycopg2 
      yum: 
        name: python-psycopg2 
        state: latest


    - name: Check if the database exists
      become_user: postgres
      postgresql_info:
        db: "{{ item }}"
      with_items:
      - wedecide
      - anonymous
      - mrobot


    - name: Back up the database
      postgresql_db:
        state: dump
        name: "{{ item }}"
        target: "/var/lib/pgsql/15/backups/{{ date }}/{{ item }}.dump.tar.bz2"
        port: 5432
      become: yes
      become_user: postgres
      with_items:
      - wedecide
      - anonymous
      - mrobot

